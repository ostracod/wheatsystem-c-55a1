
INCLUDE "../macros.wbasm"

VAR key, s8

FUNC init, wsInit.id
    
    VAR termName, s32
    VAR termHandle, s32
    VAR wrtTermIndex, s32
    VAR listenTermIndex, s32
    newTextAlloc termName, termNameStart, termNameEnd
    openFile termHandle, termName
    launch termHandle
    findFunc wrtTermIndex, termHandle, wsWrtTerm.id
    findFunc listenTermIndex, termHandle, wsListenTerm.id
    callRemote termHandle, listenTermIndex
    
    VAR termText, s32
    newAlloc termText, 0, 6
    wrt termText[4]:s8, 32
    
    LBL loop
    wait
    
    VAR termTextIndex, s8
    VAR unitPlace, s32
    VAR tempNumber, s32
    VAR termDigit, s8
    VAR condition, s8
    
    gre condition, 0, key
    jmpZ skip1, condition
    sub tempNumber, 0, key
    wrt termText[0]:s8, 45
    wrt termText[5]:s8, 32
    jmp skip2
    LBL skip1
    wrt tempNumber, key
    wrt termText[0]:s8, 32
    wrt termText[5]:s8, key
    LBL skip2
    
    gre condition, 32, key
    jmpNZ skip3, condition
    gre condition, key, 126
    jmpNZ skip3, condition
    wrt termText[5]:s8, key
    jmp skip4
    LBL skip3
    wrt termText[5]:s8, 32
    LBL skip4
    
    wrt termTextIndex, 1
    wrt unitPlace, 100
    
    LBL digitLoop
    div termDigit, tempNumber, unitPlace
    add termText[termTextIndex]:s8, 48, termDigit
    mod tempNumber, tempNumber, unitPlace
    div unitPlace, unitPlace, 10
    add termTextIndex, termTextIndex, 1
    gre condition, 4, termTextIndex
    jmpNZ digitLoop, condition
    
    newArgFrame wsWrtTerm.argsSize
    wrt wsWrtTerm.args.x, 0
    wrt wsWrtTerm.args.y, 0
    wrt wsWrtTerm.args.text, termText
    callRemote termHandle, wrtTermIndex
    
    jmp loop
END

FUNC termInput, wsTermInput.id
    ARG inputKey, s8
    wrt key, inputKey
    resume
END

APP_DATA
    LBL termNameStart
    DATA "wsTerm"
    LBL termNameEnd
END


